{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\React\\\\Project\\\\Frontend_Infowargame_v3\\\\src\\\\components\\\\common\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filebox = styled.div`\n  position: absolute;\n  display: inline-block;\n  border: 1px solid #2c2c2c;\n  border-radius: 10px;\n  line-height: 30px;\n  width: 100px;\n  height: 50px;\n  left: 100px;\n  top: 620px;\n`;\n_c = Filebox;\nconst StyledInput = styled.input`\n  top: 700px;\n  position: absolute;\n`;\n_c2 = StyledInput;\n\nconst FileUpload = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = event => {\n    // files 배열 자체를 담을 것이므로 index 뺌.\n    setSelectedFile(event.target.files);\n  };\n\n  const handleFileUpload = () => {\n    const formData = new FormData(); // 배열 내부에 있는 모든 요소를 append 해야 하므로\n\n    for (let i = 0; i < selectedFile.length; i++) {\n      formData.append(\"myfile\", selectedFile[i], selectedFile[i].name);\n    } // 여러 개의 파일이므로 multipart type으로\n\n\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }; // config 넣어줌\n\n    axios.post(\"api/uploadfile\", formData, config).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Filebox, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"file\",\n        placeholder: \"\\uD30C\\uC77C\\uCC3E\\uAE30\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"file\",\n        children: \"\\uD30C\\uC77C\\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n\n_c3 = FileUpload;\nexport default FileUpload;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Filebox\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"FileUpload\");","map":{"version":3,"sources":["C:/Code/React/Project/Frontend_Infowargame_v3/src/components/common/FileUpload.js"],"names":["React","useState","axios","styled","Filebox","div","StyledInput","input","FileUpload","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleFileUpload","formData","FormData","i","length","append","name","config","headers","post","then","res","console","log","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,O;AAYN,MAAME,WAAW,GAAGH,MAAM,CAACI,KAAM;AACjC;AACA;AACA,CAHA;MAAMD,W;;AAKN,MAAME,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMU,gBAAgB,GAAIC,KAAD,IAAW;AAClC;AACAF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAD6B,CAG7B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,YAAY,CAACU,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CF,MAAAA,QAAQ,CAACI,MAAT,CAAgB,QAAhB,EAA0BX,YAAY,CAACS,CAAD,CAAtC,EAA2CT,YAAY,CAACS,CAAD,CAAZ,CAAgBG,IAA3D;AACD,KAN4B,CAQ7B;;;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf,CAT6B,CAe7B;;AACArB,IAAAA,KAAK,CACFsB,IADH,CACQ,gBADR,EAC0BR,QAD1B,EACoCM,MADpC,EAEGG,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAJH,EAKGG,KALH,CAKUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAPH;AAQD,GAxBD;;AA0BA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,QAAQ,EAAEnB;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/CD;;GAAMH,U;;MAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Filebox = styled.div`\r\n  position: absolute;\r\n  display: inline-block;\r\n  border: 1px solid #2c2c2c;\r\n  border-radius: 10px;\r\n  line-height: 30px;\r\n  width: 100px;\r\n  height: 50px;\r\n  left: 100px;\r\n  top: 620px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  top: 700px;\r\n  position: absolute;\r\n`;\r\n\r\nconst FileUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    // files 배열 자체를 담을 것이므로 index 뺌.\r\n    setSelectedFile(event.target.files);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    const formData = new FormData();\r\n\r\n    // 배열 내부에 있는 모든 요소를 append 해야 하므로\r\n    for (let i = 0; i < selectedFile.length; i++) {\r\n      formData.append(\"myfile\", selectedFile[i], selectedFile[i].name);\r\n    }\r\n\r\n    // 여러 개의 파일이므로 multipart type으로\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    // config 넣어줌\r\n    axios\r\n      .post(\"api/uploadfile\", formData, config)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Filebox>\r\n        <StyledInput\r\n          type=\"file\"\r\n          placeholder=\"파일찾기\"\r\n          multiple\r\n          onChange={handleFileChange}\r\n        />\r\n        <label for=\"file\">파일찾기</label>\r\n      </Filebox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}